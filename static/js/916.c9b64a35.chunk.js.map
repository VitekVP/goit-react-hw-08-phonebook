{"version":3,"file":"static/js/916.c9b64a35.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormPhonebook = styled.form`\n  padding: 20px;\n  margin: 0 auto 20px;\n  max-width: 600px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  border: 2px solid teal;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  font-size: 14px;\n  font-weight: 600;\n  color: #020c59;\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { toast } from 'react-toastify';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { Input, Button } from '@chakra-ui/react';\n\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nimport { FormPhonebook, Label } from './ContactForm.styled';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [load, setLoad] = useState(false);\n  const { items } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const addContactFromForm = (name, number) => {\n    const normalizedName = name.toLocaleLowerCase().trim();\n    const findName = items.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedName\n    );\n\n    if (findName) {\n      toast.warning(`${name} is already in the contacts`);\n      return;\n    }\n\n    const normalizedNumber = number;\n    const findNumber = items.find(\n      contact => contact.number === normalizedNumber\n    );\n\n    if (findNumber) {\n      toast.warning(`${number} is already in the contacts`);\n      return;\n    }\n    setLoad(true);\n    dispatch(addContact({ name, number }))\n      .unwrap()\n      .then(() => {\n        setLoad(false);\n        toast.success(`contact ${name} with ${number} added successfully`);\n        reset();\n      })\n      .catch(() => {\n        setLoad(false);\n        toast.error(`Sorry samething wrong, please try again!`);\n      });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addContactFromForm(name, number);\n  };\n\n  return (\n    <FormPhonebook onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          required\n          pattern=\"^[a-zA-Zа-яА-Я]+(?:[' -][a-zA-Zа-яА-Я]+)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          variant=\"filled\"\n          focusBorderColor=\"teal\"\n          placeholder=\"Enter your name\"\n          color=\"teal\"\n          _placeholder={{ opacity: 0.7, color: 'inherit' }}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          required\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          variant=\"filled\"\n          focusBorderColor=\"teal\"\n          placeholder=\"Enter your number\"\n          color=\"teal\"\n          _placeholder={{ opacity: 0.7, color: 'inherit' }}\n        />\n      </Label>\n      <Button type=\"submit\" colorScheme=\"teal\">\n        {load && <RotatingLines strokeColor=\"white\" width=\"16\" />}\n        Add contact\n      </Button>\n    </FormPhonebook>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  padding: 4px 8px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  font-weight: 700;\n  color: #020c59;\n\n  box-shadow: 0px 0px 3px 0px teal;\n  border-radius: 4px;\n\n  &:not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\n\nexport const BoxIcon = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { Button, Icon } from '@chakra-ui/react';\nimport { IoIosContact } from 'react-icons/io';\n\nimport { deleteContact } from 'redux/operations';\n\nimport { ListItem, BoxIcon } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [load, setLoad] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClikBtn = () => {\n    setLoad(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => {\n        setLoad(false);\n        toast.success(`contact ${name} with ${number} deleted successfully`);\n      })\n      .catch(() => {\n        setLoad(false);\n        toast.error(`Sorry samething wrong, please try again!`);\n      });\n  };\n\n  return (\n    <ListItem key={id}>\n      <BoxIcon>\n        <Icon as={IoIosContact} boxSize={6} color=\"#020c59\" />\n        <p>\n          {name}: {number}\n        </p>\n      </BoxIcon>\n      <Button\n        type=\"button\"\n        onClick={handleClikBtn}\n        colorScheme=\"teal\"\n        variant=\"outline\"\n        size=\"sm\"\n        width=\"80px\"\n      >\n        {load && <RotatingLines strokeColor=\"teal\" width=\"14\" />}\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  max-width: 600px;\n  margin: 0 auto 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { toast } from 'react-toastify';\n\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nimport { fetchContacts } from 'redux/operations';\n\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\n// import { NoServise } from 'components/NoServise/NoServise';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const [load, setLoad] = useState(false);\n  const { items } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  // const { items, isLoading, error } = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoad(true);\n    dispatch(fetchContacts())\n      .unwrap()\n      .then(() => {\n        setLoad(false);\n      })\n      .catch(() => {\n        setLoad(false);\n        toast.error(`Sorry samething wrong, please try again!`);\n      });\n  }, [dispatch]);\n\n  const getVisibleContact = () => {\n    if (!filter) {\n      return items;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContact = getVisibleContact();\n\n  return (\n    <>\n      {load && <Loader />}\n      <List>\n        {visibleContact.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 600px;\n  margin: 0 auto 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n\n  text-align: center;\n  font-size: 28px;\n  font-weight: 700;\n  color: #020c59;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  font-size: 20px;\n  font-weight: 600;\n  color: #020c59;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { Input } from '@chakra-ui/react';\n\nimport { selectFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filterSlise';\n\nimport { Container, Label, Title } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChangeFilter = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <Container>\n      <Title>Contacts</Title>\n      <Label>\n        Find contacts by name:\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChangeFilter}\n          variant=\"filled\"\n          focusBorderColor=\"teal\"\n          placeholder=\"enter a name for filtering\"\n          color=\"teal\"\n          _placeholder={{ opacity: 0.7, color: 'inherit' }}\n        />\n      </Label>\n    </Container>\n  );\n};\n","import { Form } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Form />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default ContactsPage;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["FormPhonebook","styled","Label","Form","useState","name","setName","number","setNumber","load","setLoad","items","useSelector","selectContacts","dispatch","useDispatch","handleInputChange","event","target","value","addContactFromForm","normalizedName","toLocaleLowerCase","trim","find","contact","toast","normalizedNumber","addContact","unwrap","then","catch","onSubmit","preventDefault","I","type","onChange","required","pattern","title","variant","focusBorderColor","placeholder","color","_placeholder","opacity","colorScheme","strokeColor","width","ListItem","BoxIcon","ContactListItem","id","as","IoIosContact","boxSize","onClick","deleteContact","size","List","ContactList","filter","selectFilter","useEffect","fetchContacts","visibleContact","normalizedFilter","toLowerCase","includes","getVisibleContact","Loader","map","Container","Title","Filter","changeFilter","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","useFormControl","_a","_b","_c","disabled","readOnly","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className"],"sourceRoot":""}